1
00:00:00,000 --> 00:00:02,345
这是把叉子 (fork)

2
00:00:02,345 --> 00:00:04,675
叉子是 fork 的名词形式

3
00:00:04,674 --> 00:00:06,794
当我们在版本控制中谈到 fork 的时候

4
00:00:06,794 --> 00:00:09,129
我们要说的不是叉子的意思

5
00:00:09,130 --> 00:00:12,620
而是 fork 的动词或者说是它代表的动作 (分叉)

6
00:00:12,619 --> 00:00:15,089
想象一下 你正在远足 你面前的路

7
00:00:15,089 --> 00:00:17,399
突然分开变成了两条

8
00:00:17,399 --> 00:00:21,929
这时 我们会说这条路分岔 (forked) 成了两条不同的路

9
00:00:21,929 --> 00:00:24,059
这就是 fork 这个词的动词含义

10
00:00:24,059 --> 00:00:25,919
在版本控制的世界中

11
00:00:25,920 --> 00:00:27,520
fork 就是指分裂

12
00:00:27,519 --> 00:00:29,655
分成完全一模一样的两份

13
00:00:29,655 --> 00:00:34,285
fork 一个代码库就是分出一个和这个代码库一模一样的副本

14
00:00:34,284 --> 00:00:36,228
注意 fork 不是 Git 的内容

15
00:00:36,228 --> 00:00:38,600
你不能在命令行中运行 git fork 命令

16
00:00:38,600 --> 00:00:41,132
git 没有 fork 这个子命令

17
00:00:41,131 --> 00:00:44,040
fork 是由宿主环境 (hosting environment) 提供的功能

18
00:00:44,040 --> 00:00:45,539
GitHub 就是我们用到的宿主环境

19
00:00:45,539 --> 00:00:49,085
所以在 GitHub 页面上有一个 fork 按钮，用它你就可以复制代码库

20
00:00:49,085 --> 00:00:52,620
假设你在 GitHub 一个代码库的页面上点击了 fork 按钮

21
00:00:52,619 --> 00:00:57,140
这时 你就复制了这个代码库到你自己的账户下

22
00:00:57,140 --> 00:00:59,880
这就是 fork 的含义

23
00:00:59,880 --> 00:01:03,000
复制一个代码库的副本并成为这个代码库副本的所有者
